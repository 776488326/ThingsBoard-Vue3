{"version":3,"file":"use-form-item-c41ec946.js","sources":["../../node_modules/element-plus/es/hooks/use-deprecated/index.mjs","../../node_modules/element-plus/es/hooks/use-id/index.mjs","../../node_modules/element-plus/es/components/form/src/hooks/use-form-item.mjs"],"sourcesContent":["import { watch, unref } from 'vue';\nimport '../../utils/index.mjs';\nimport { debugWarn } from '../../utils/error.mjs';\n\nconst useDeprecated = ({ from, replacement, scope, version, ref, type = \"API\" }, condition) => {\n  watch(() => unref(condition), (val) => {\n    if (val) {\n      debugWarn(scope, `[${type}] ${from} is about to be deprecated in version ${version}, please use ${replacement} instead.\nFor more detail, please visit: ${ref}\n`);\n    }\n  }, {\n    immediate: true\n  });\n};\n\nexport { useDeprecated };\n//# sourceMappingURL=index.mjs.map\n","import { getCurrentInstance, inject, computed, unref } from 'vue';\nimport '../../utils/index.mjs';\nimport { useGetDerivedNamespace } from '../use-namespace/index.mjs';\nimport { isClient } from '@vueuse/core';\nimport { debugWarn } from '../../utils/error.mjs';\n\nconst defaultIdInjection = {\n  prefix: Math.floor(Math.random() * 1e4),\n  current: 0\n};\nconst ID_INJECTION_KEY = Symbol(\"elIdInjection\");\nconst useIdInjection = () => {\n  return getCurrentInstance() ? inject(ID_INJECTION_KEY, defaultIdInjection) : defaultIdInjection;\n};\nconst useId = (deterministicId) => {\n  const idInjection = useIdInjection();\n  if (!isClient && idInjection === defaultIdInjection) {\n    debugWarn(\"IdInjection\", `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed\nusage: app.provide(ID_INJECTION_KEY, {\n  prefix: number,\n  current: number,\n})`);\n  }\n  const namespace = useGetDerivedNamespace();\n  const idRef = computed(() => unref(deterministicId) || `${namespace.value}-id-${idInjection.prefix}-${idInjection.current++}`);\n  return idRef;\n};\n\nexport { ID_INJECTION_KEY, useId, useIdInjection };\n//# sourceMappingURL=index.mjs.map\n","import { inject, ref, computed, onMounted, watch, toRef, onUnmounted } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { formContextKey, formItemContextKey } from '../constants.mjs';\nimport { useId } from '../../../../hooks/use-id/index.mjs';\n\nconst useFormItem = () => {\n  const form = inject(formContextKey, void 0);\n  const formItem = inject(formItemContextKey, void 0);\n  return {\n    form,\n    formItem\n  };\n};\nconst useFormItemInputId = (props, {\n  formItemContext,\n  disableIdGeneration,\n  disableIdManagement\n}) => {\n  if (!disableIdGeneration) {\n    disableIdGeneration = ref(false);\n  }\n  if (!disableIdManagement) {\n    disableIdManagement = ref(false);\n  }\n  const inputId = ref();\n  let idUnwatch = void 0;\n  const isLabeledByFormItem = computed(() => {\n    var _a;\n    return !!(!props.label && formItemContext && formItemContext.inputIds && ((_a = formItemContext.inputIds) == null ? void 0 : _a.length) <= 1);\n  });\n  onMounted(() => {\n    idUnwatch = watch([toRef(props, \"id\"), disableIdGeneration], ([id, disableIdGeneration2]) => {\n      const newId = id != null ? id : !disableIdGeneration2 ? useId().value : void 0;\n      if (newId !== inputId.value) {\n        if (formItemContext == null ? void 0 : formItemContext.removeInputId) {\n          inputId.value && formItemContext.removeInputId(inputId.value);\n          if (!(disableIdManagement == null ? void 0 : disableIdManagement.value) && !disableIdGeneration2 && newId) {\n            formItemContext.addInputId(newId);\n          }\n        }\n        inputId.value = newId;\n      }\n    }, { immediate: true });\n  });\n  onUnmounted(() => {\n    idUnwatch && idUnwatch();\n    if (formItemContext == null ? void 0 : formItemContext.removeInputId) {\n      inputId.value && formItemContext.removeInputId(inputId.value);\n    }\n  });\n  return {\n    isLabeledByFormItem,\n    inputId\n  };\n};\n\nexport { useFormItem, useFormItemInputId };\n//# sourceMappingURL=use-form-item.mjs.map\n"],"names":["useDeprecated","from","replacement","scope","version","ref","type","condition","watch","unref","val","defaultIdInjection","ID_INJECTION_KEY","useIdInjection","getCurrentInstance","inject","useId","deterministicId","idInjection","namespace","useGetDerivedNamespace","computed","useFormItem","form","formContextKey","formItem","formItemContextKey","useFormItemInputId","props","formItemContext","disableIdGeneration","disableIdManagement","inputId","idUnwatch","isLabeledByFormItem","_a","onMounted","toRef","id","disableIdGeneration2","newId","onUnmounted"],"mappings":"iKAIK,MAACA,EAAgB,CAAC,CAAE,KAAAC,EAAM,YAAAC,EAAa,MAAAC,EAAO,QAAAC,EAAS,IAAAC,EAAK,KAAAC,EAAO,KAAO,EAAEC,IAAc,CAC7FC,EAAM,IAAMC,EAAMF,CAAS,EAAIG,GAAQ,CAMzC,EAAK,CACD,UAAW,EACf,CAAG,CACH,ECRMC,EAAqB,CACzB,OAAQ,KAAK,MAAM,KAAK,OAAM,EAAK,GAAG,EACtC,QAAS,CACX,EACMC,EAAmB,OAAO,eAAe,EACzCC,EAAiB,IACdC,EAAoB,EAAGC,EAAOH,EAAkBD,CAAkB,EAAIA,EAEzEK,EAASC,GAAoB,CACjC,MAAMC,EAAcL,IAQdM,EAAYC,IAElB,OADcC,EAAS,IAAMZ,EAAMQ,CAAe,GAAK,GAAGE,EAAU,YAAYD,EAAY,UAAUA,EAAY,WAAW,CAE/H,ECrBMI,EAAc,IAAM,CACxB,MAAMC,EAAOR,EAAOS,EAAgB,MAAM,EACpCC,EAAWV,EAAOW,EAAoB,MAAM,EAClD,MAAO,CACL,KAAAH,EACA,SAAAE,CACJ,CACA,EACME,EAAqB,CAACC,EAAO,CACjC,gBAAAC,EACA,oBAAAC,EACA,oBAAAC,CACF,IAAM,CACCD,IACHA,EAAsBzB,EAAI,EAAK,GAE5B0B,IACHA,EAAsB1B,EAAI,EAAK,GAEjC,MAAM2B,EAAU3B,IAChB,IAAI4B,EACJ,MAAMC,EAAsBb,EAAS,IAAM,CACzC,IAAIc,EACJ,MAAO,CAAC,EAAE,CAACP,EAAM,OAASC,GAAmBA,EAAgB,YAAcM,EAAKN,EAAgB,WAAa,KAAO,OAASM,EAAG,SAAW,EAC/I,CAAG,EACD,OAAAC,EAAU,IAAM,CACdH,EAAYzB,EAAM,CAAC6B,EAAMT,EAAO,IAAI,EAAGE,CAAmB,EAAG,CAAC,CAACQ,EAAIC,CAAoB,IAAM,CAC3F,MAAMC,EAAQF,IAAmBC,EAAuC,OAAhBvB,EAAO,EAAC,OAC5DwB,IAAUR,EAAQ,QAChBH,GAAmB,MAAgBA,EAAgB,gBACrDG,EAAQ,OAASH,EAAgB,cAAcG,EAAQ,KAAK,EACxD,EAAED,GAAuB,MAAgBA,EAAoB,QAAU,CAACQ,GAAwBC,GAClGX,EAAgB,WAAWW,CAAK,GAGpCR,EAAQ,MAAQQ,EAExB,EAAO,CAAE,UAAW,EAAI,CAAE,CAC1B,CAAG,EACDC,EAAY,IAAM,CAChBR,GAAaA,EAAS,EAClBJ,GAAmB,MAAgBA,EAAgB,eACrDG,EAAQ,OAASH,EAAgB,cAAcG,EAAQ,KAAK,CAElE,CAAG,EACM,CACL,oBAAAE,EACA,QAAAF,CACJ,CACA","x_google_ignoreList":[0,1,2]}